Pull,Path,Diff_hunk,Comment
197,README.md,"@@ -114,6 +114,7 @@ instance, or the system browser.
     - __hardwareback__: set to `yes` to use the hardware back button to navigate backwards through the `InAppBrowser`'s history. If there is no previous page, the `InAppBrowser` will close.  The default value is `yes`, so you must set it to `no` if you want the back button to simply close the InAppBrowser.
     - __mediaPlaybackRequiresUserAction__: Set to `yes` to prevent HTML5 audio or video from autoplaying (defaults to `no`).
     - __shouldPauseOnSuspend__: Set to `yes` to make InAppBrowser WebView to pause/resume with the app to stop background audio (this may be required to avoid Google Play issues like described in [CB-11013](https://issues.apache.org/jira/browse/CB-11013)).
+    - __hidenotclose__: set to 'yes' to make the done/close button hide the browser window rather than closing the browser (defaults to 'no')","[{'comment': 'change done/close to just close as the done button is for iOS', 'commenter': 'jcesarmobile'}]"
197,README.md,"@@ -131,6 +132,7 @@ instance, or the system browser.
     - __presentationstyle__:  Set to `pagesheet`, `formsheet` or `fullscreen` to set the [presentation style](http://developer.apple.com/library/ios/documentation/UIKit/Reference/UIViewController_Class/Reference/Reference.html#//apple_ref/occ/instp/UIViewController/modalPresentationStyle) (defaults to `fullscreen`).
     - __transitionstyle__: Set to `fliphorizontal`, `crossdissolve` or `coververtical` to set the [transition style](http://developer.apple.com/library/ios/#documentation/UIKit/Reference/UIViewController_Class/Reference/Reference.html#//apple_ref/occ/instp/UIViewController/modalTransitionStyle) (defaults to `coververtical`).
     - __toolbarposition__: Set to `top` or `bottom` (default is `bottom`). Causes the toolbar to be at the top or bottom of the window.
+    - __hidenotclose__: set to 'yes' to make the done/close button hide the browser window rather than closing the browser (defaults to 'no')","[{'comment': 'Change done/close to just done as iOS has no close button', 'commenter': 'jcesarmobile'}, {'comment': 'the option is implemented for both android and iOS and in the android docs it was referred to as ""close"" or ""x"" so I included both.  I can change it if you like.', 'commenter': 'ghenry22'}, {'comment': 'yeah, it\'s for both, but the preference is documented for both too, so in the iOS section it should say ""done"" and in the Android section it should say ""close"" instead of saying ""done/close"" on both', 'commenter': 'jcesarmobile'}]"
197,src/ios/CDVInAppBrowser.m,"@@ -246,25 +246,11 @@ - (void)show:(CDVInvokedUrlCommand*)command
 - (void)hide:(CDVInvokedUrlCommand*)command","[{'comment': 'Just make it \r\n```\r\n- (void)hide:(CDVInvokedUrlCommand*)command\r\n{\r\n    [self browserHide];\r\n}\r\n```\r\nThere is no need to create a new hide method, you can call browserHide directly', 'commenter': 'jcesarmobile'}]"
197,src/ios/CDVInAppBrowser.m,"@@ -815,6 +827,13 @@ - (void)close
     });
 }
 
+- (void)hide","[{'comment': 'As I said before, you can just remove this method if you call browserHide from the another hide', 'commenter': 'jcesarmobile'}]"
197,src/ios/CDVInAppBrowser.h,"@@ -96,6 +97,7 @@
 @property (nonatomic) NSURL* currentURL;
 
 - (void)close;
+- (void)hide;","[{'comment': 'There is no need for this method', 'commenter': 'jcesarmobile'}]"
197,src/ios/CDVInAppBrowser.m,"@@ -568,7 +576,11 @@ - (void)createViews
     self.spinner.userInteractionEnabled = NO;
     [self.spinner stopAnimating];
 
-    self.closeButton = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:@selector(close)];
+    if (_browserOptions.hidenotclose != nil) {","[{'comment': ""This shows a warning \r\n> Comparison between pointer and integer ('int' and 'void *')\r\n\r\nTake a look how the other options are parsed and converted to booleans and do the same so you can use `if (browserOptions.hidenotclose)`"", 'commenter': 'jcesarmobile'}]"
253,plugin.xml,"@@ -147,52 +101,6 @@
         <source-file src=""src/osx/CDVInAppBrowser.m"" />
     </platform>
 
-    <!-- wp7 -->
-    <platform name=""wp7"">
-        <config-file target=""Properties/WMAppManifest.xml"" parent=""/Deployment/App/Capabilities"">
-            <Capability Name=""ID_CAP_NETWORKING""/>
-        </config-file>
-
-        <js-module src=""www/inappbrowser.js"" name=""inappbrowser"">
-            <clobbers target=""cordova.InAppBrowser.open"" />
-            <clobbers target=""window.open"" />
-        </js-module>
-        <config-file target=""config.xml"" parent=""/*"">
-            <feature name=""InAppBrowser"">
-                <param name=""wp-package"" value=""InAppBrowser""/>
-            </feature>
-        </config-file>
-
-        <config-file target=""Properties/WMAppManifest.xml"" parent=""/Deployment/App/Capabilities"">
-            <Capability Name=""ID_CAP_NETWORKING"" />
-        </config-file>
-
-        <source-file src=""src/wp/InAppBrowser.cs"" />
-    </platform>
-
-    <!-- wp8 -->
-    <platform name=""wp8"">
-        <config-file target=""Properties/WMAppManifest.xml"" parent=""/Deployment/App/Capabilities"">
-            <Capability Name=""ID_CAP_NETWORKING""/>
-        </config-file>
-
-        <js-module src=""www/inappbrowser.js"" name=""inappbrowser"">
-            <clobbers target=""cordova.InAppBrowser.open"" />
-            <clobbers target=""window.open"" />
-        </js-module>
-        <config-file target=""config.xml"" parent=""/*"">
-            <feature name=""InAppBrowser"">
-                <param name=""wp-package"" value=""InAppBrowser""/>
-            </feature>
-        </config-file>
-
-        <config-file target=""Properties/WMAppManifest.xml"" parent=""/Deployment/App/Capabilities"">
-            <Capability Name=""ID_CAP_NETWORKING"" />
-        </config-file>
-
-        <source-file src=""src/wp/InAppBrowser.cs"" />
-    </platform>
-
     <!-- windows8 -->","[{'comment': '@surajpindoria I think you want to get rid of this platform too.', 'commenter': 'macdonst'}]"
503,src/android/InAppBrowser.java,"@@ -313,7 +313,9 @@ else if (action.equals(""show"")) {
             this.cordova.getActivity().runOnUiThread(new Runnable() {
                 @Override
                 public void run() {
-                    dialog.show();
+                    if(dialog != null){","[{'comment': 'This is a good change in my point of view.', 'commenter': 'NiklasMerz'}]"
503,src/android/InAppBrowser.java,"@@ -324,7 +326,9 @@ else if (action.equals(""hide"")) {
             this.cordova.getActivity().runOnUiThread(new Runnable() {
                 @Override
                 public void run() {
-                    dialog.hide();
+                    if(dialog != null){","[{'comment': 'This is a good change as well.', 'commenter': 'NiklasMerz'}]"
503,src/android/InAppBrowser.java,"@@ -1066,12 +1070,16 @@ public void postMessage(String data) {
                 lp.height = WindowManager.LayoutParams.MATCH_PARENT;
 
                 dialog.setContentView(main);
-                dialog.show();
+                if(dialog != null){","[{'comment': 'If `dialog` would be null, it would crash anyway because of the lines above and below. I would put the null check around all of these lines:\r\n\r\n```\r\n                if(dialog != null){\r\n                    dialog.setContentView(main);\r\n                    dialog.show();\r\n                   dialog.getWindow().setAttributes(lp);\r\n                }\r\n```\r\n\r\n\r\n', 'commenter': 'NiklasMerz'}, {'comment': 'And add a space after the `if` and before the `{` for all new guards 🙃', 'commenter': 'timbru31'}, {'comment': 'Good catch!', 'commenter': 'NiklasMerz'}, {'comment': 'I just pushed these changes. See my following comment', 'commenter': 'NiklasMerz'}]"
515,types/index.d.ts,"@@ -6,7 +6,7 @@
 // Copyright (c) Microsoft Open Technologies Inc
 // Licensed under the MIT license.
 // TypeScript Version: 2.3
-type channel = ""loadstart"" | ""loadstop"" | ""loaderror"" | ""exit"" | ""message"";
+type channel = ""loadstart"" | ""loadstop"" | ""loaderror"" | ""exit"" | ""message"" | string;","[{'comment': ""this makes the type useless if we just use a `string`. Let's continue the discussion in #514 where I've added a question."", 'commenter': 'timbru31'}]"
634,package.json,"@@ -1,6 +1,6 @@
 {
   ""name"": ""cordova-plugin-inappbrowser"",
-  ""version"": ""3.2.1-dev"",
+  ""version"": ""3.2.2-dev"",","[{'comment': 'Please revert the version changes again.', 'commenter': 'timbru31'}, {'comment': 'I reverted all version changes.', 'commenter': 'PDLMobileApps'}]"
634,src/android/InAppBrowser.java,"@@ -147,6 +148,7 @@ Licensed to the Apache Software Foundation (ASF) under one
     private boolean showFooter = false;
     private String footerColor = """";
     private String beforeload = """";
+    private boolean fullscreen = false;","[{'comment': 'See above, the default need to be true in order to avoid a breaking change.', 'commenter': 'timbru31'}, {'comment': ""I agree. I set it to false as the web view should have never been opened in full screen in the first place (unless it's a game). Anyway, I understand the backward compatibility requirement."", 'commenter': 'PDLMobileApps'}, {'comment': ""@breautek @NiklasMerz - what's your opinion on this? It seems v3.1.0 accidentally sneaked in this breaking change (see, e.g. https://github.com/apache/cordova-plugin-inappbrowser/issues/598#issuecomment-572597994)\r\n\r\nShould we (a) restore v3.0.0 behavior or (b) follow semver and make it configurable in a minor release?\r\n\r\nThe change to always full screen is now live since Jun 28, 2019, so nearly two years.\r\n\r\nPersonally I'd vote for b)"", 'commenter': 'timbru31'}, {'comment': 'Not very knowledgeable with the in-app-browser but unless if there is a very good reason why it should be hard-coded (which I don\'t think there is any?), I think we should be non-opinionated and let it be configurable.\r\n\r\nNormally I\'d also vote to revert the default as well, but if it\'s been live for nearly two years, I think it\'s smarter to just leave the ""default"" as `true`. I think if we change it to `false` now, then we would have to treat this PR as a breaking change.', 'commenter': 'breautek'}]"
688,README.md,"@@ -168,6 +168,16 @@ At the moment the only supported target in OSX is `_system`.
 
 `_blank` and `_self` targets are not yet implemented and are ignored silently. Pull requests and patches to get these to work are greatly appreciated.
 
+### iOS Quirks
+
+Since iOS 13 iPads try to adapt their content mode / user agent for the optimal browsing experience. This may result in iPads having their user agent set to `Macintosh`. You can change this with the `PreferredContentMode` preference in ""config.xml"".","[{'comment': 'Can I suggest a slightly longer explanation?\r\n\r\nSince iOS 13 forked into iPadOS 13, iPads try to adapt their content mode / user agent for the optimal browsing experience. This may result in iPads having their user agent set to `Macintosh` making it hard to detect them as mobile devices using user agent string sniffing. You can change this with the `PreferredContentMode` preference in ""config.xml"".', 'commenter': 'dpa99c'}, {'comment': '```suggestion\r\nSince the introduction of iPadOS 13, iPads try to adapt their content mode / user agent for the optimal browsing experience. This may result in iPads having their user agent set to Macintosh making it hard to detect them as mobile devices using user agent string sniffing. You can change this with the PreferredContentMode preference in ""config.xml"".\r\n```\r\n\r\nSounds good to me. However I would try to avoid naming iPadOS an iOS fork.', 'commenter': 'NiklasMerz'}]"
688,src/ios/CDVWKInAppBrowser.m,"@@ -758,6 +758,15 @@ - (void)createViews
         configuration.mediaPlaybackRequiresUserAction = _browserOptions.mediaplaybackrequiresuseraction;
     }
     
+    if (@available(iOS 13.0, *)) {
+        NSString *contentMode = [self settingForKey:@""PreferredContentMode""];
+        if ([contentMode  isEqual: @""mobile""]) {","[{'comment': 'Objective-C noob here, two spaces required?, some for two lines below', 'commenter': 'timbru31'}, {'comment': '```suggestion\r\n        if ([contentMode isEqual: @""mobile""]) {\r\n```\r\n\r\nGuess not', 'commenter': 'NiklasMerz'}]"
688,README.md,"@@ -168,6 +168,16 @@ At the moment the only supported target in OSX is `_system`.
 
 `_blank` and `_self` targets are not yet implemented and are ignored silently. Pull requests and patches to get these to work are greatly appreciated.
 
+### iOS Quirks
+
+Since the introduction of iPadOS 13, iPads try to adapt their content mode / user agent for the optimal browsing experience. This may result in iPads having their user agent set to Macintosh making it hard to detect them as mobile devices using user agent string sniffing. You can change this with the PreferredContentMode preference in ""config.xml"".","[{'comment': '```suggestion\r\nSince the introduction of iPadOS 13, iPads try to adapt their content mode / user agent for the optimal browsing experience. This may result in iPads having their user agent set to Macintosh, making it hard to detect them as mobile devices using user agent string sniffing. You can change this with the `PreferredContentMode` preference in `config.xml`.\r\n```', 'commenter': 'timbru31'}]"
886,src/android/InAppBrowser.java,"@@ -996,9 +996,6 @@ public void postMessage(String data) {
                 inAppWebView.setId(Integer.valueOf(6));
                 inAppWebView.getSettings().setLoadWithOverviewMode(true);
                 inAppWebView.getSettings().setUseWideViewPort(useWideViewPort);
-                // Multiple Windows set to true to mitigate Chromium security bug.
-                //  See: https://bugs.chromium.org/p/chromium/issues/detail?id=1083819
-                inAppWebView.getSettings().setSupportMultipleWindows(true);","[{'comment': 'this is here to mitigate a Chromium security bug as the comment explained, so you are reintroducing the issue again', 'commenter': 'jcesarmobile'}, {'comment': 'This bug has been closed, please refer to the link', 'commenter': 'mosabab'}, {'comment': 'Also this line prevent intent links from work', 'commenter': 'mosabab'}, {'comment': 'I try to check intent links, but it not working because of this line you mentioned', 'commenter': 'mosabab'}, {'comment': ""It's closed because it was fixed in newer chromium versions, but we can't guarantee the user has the patched version, so we need this code to prevent the attack. If it also prevent the intents, it can probably be fixed in a different way."", 'commenter': 'jcesarmobile'}, {'comment': 'The flaw applies to all versions of chrome webview prior to 83.0.4103.106.\r\n\r\nOlder android devices may not be able to run the latest webview which would contain the security patch (I know android 5.1 for example only have version 76 available on the google play store).\r\n\r\nThese android versions are still versions Cordova officially supports, which is why this mitigation line is necessary.\r\n\r\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-6506#range-6218332\r\n\r\nIf this line blocks the feature to handle intent links, then we cannot support the feature at this time. If you need this feature, you can fork this plugin, but I would recommend increasing your min sdk to a level where you can ensure that all your users can be running the patched webview.', 'commenter': 'breautek'}, {'comment': 'You are welcome to improve this PR in the correct way 👍', 'commenter': 'mosabab'}, {'comment': 'You said we can fix in other way, so we need to keep that line also we need to run the intent links with the other correct way, so any modify to this PR is good, anyone who have full experience to fix this issue can modify this PR. (My current experience in Java programming is not enough to modify this code to handle Intent links in other way).', 'commenter': 'mosabab'}]"
