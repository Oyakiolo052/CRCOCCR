d_hunk,comments
"@@ -92,6 +94,20 @@ public Password(String dfault) {
     public String toString() {
       return new String(value, UTF_8);
     }
+
+    /**
+     * Prompts user for a password
+     *
+     * @return user entered Password object, null if no console exists
+     */
+    public static Password promptUser() throws IOException {
+      if (System.console() == null) {
+        return null;","[{'comment': ""I'm thinking that throwing an exception here would be more clear. This method cannot properly function as the caller expected, so they should get a clear exception in this case (not just a null return value).\n"", 'commenter': 'joshelser'}, {'comment': 'Fixed in 895591c\n', 'commenter': 'milleruntime'}]"
"@@ -142,11 +158,22 @@ public AuthenticationToken getToken() {
       }
     }
 
-    if (securePassword != null)
-      return new PasswordToken(securePassword.value);
-
-    if (password != null)
-      return new PasswordToken(password.value);
+    // other token types should have resolved by this point, so return PasswordToken
+    Password pass = null;
+    if (securePassword != null) {
+      pass = securePassword;
+    } else if (password != null) {
+      pass = password;
+    } else {
+      try {
+        pass = Password.promptUser();
+      } catch (IOException e) {
+        throw new RuntimeException(e);
+      }
+    }
+    if (pass != null) {","[{'comment': 'This becomes simpler too. Either we throw an RTE from the attempt to get a password, or we create a `PasswordToken` with the results. This method always gets to return a non-null value (woo!).\n', 'commenter': 'joshelser'}, {'comment': 'I had something like that before running tests. [TestClientOpts.test ](https://github.com/apache/accumulo/blob/master/core/src/test/java/org/apache/accumulo/core/cli/TestClientOpts.java#L69) expects for that method and ones that call it to return null.\n', 'commenter': 'milleruntime'}, {'comment': ""That's a weird test. I feel like the `fail()` is the expected execution path (e.g. it's asserting that `getPrincipal()` throw an exception) and the `assertNull()` is an afterthought? I wouldn't be too worried about making sure the tests pass exactly as-is. This isn't public API, so the semantics are likely not well-defined.\n"", 'commenter': 'joshelser'}, {'comment': ""OK I like removing the null return. If I get rid of the try/catch, I'd have to make getToken() throw IOException which will touch a bunch of files. \n"", 'commenter': 'milleruntime'}, {'comment': 'I will keep the try catch but remove the check for null\n', 'commenter': 'milleruntime'}]"
